// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum DocumentStatus {
  DRAFT
  PENDING
  SIGNED
  REJECTED
}

model Address {
  id        String     @id @default(uuid())
  line1     String
  line2     String?
  city      String
  zip       String
  country   String
  entity    Entity?
}

model User {
  id        String     @id @default(uuid())
  firstName String?
  lastName  String?
  fullName  String?
  phone     String?
  avatarUrl String?
  email     String     @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  entities  Entity[]
  documents Document[]
}

model Entity {
  id            String     @id @default(cuid())
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  user          User       @relation(fields: [userId], references: [id])
  userId        String
  type          String
  address       Address?   @relation(fields: [addressId], references: [id])
  addressId     String?    @unique
  company       Company?
  person        Person?
  documentsFrom Document[] @relation("DocumentFrom")
  documentsTo   Document[] @relation("DocumentTo")
}

model Company {
  id                 String   @id @default(cuid())
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  entity             Entity   @relation(fields: [entityId], references: [id])
  entityId           String   @unique
  name               String
  sirenNumber        String
  incorporationDate  DateTime
  incorporationPlace String
}

model Person {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  entity      Entity   @relation(fields: [entityId], references: [id])
  entityId    String   @unique
  firstName   String
  lastName    String
  birthDate   DateTime
  birthPlace  String
  nationality String
}

model Document {
  id            String         @id @default(cuid())
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  revision      Int            @default(1)
  jurisdiction  String
  name          String
  user          User           @relation(fields: [userId], references: [id])
  userId        String
  fromEntity    Entity         @relation("DocumentFrom", fields: [fromEntityId], references: [id])
  fromEntityId  String
  toEntity      Entity         @relation("DocumentTo", fields: [toEntityId], references: [id])
  toEntityId    String
  signatureDate DateTime?
  status        DocumentStatus @default(DRAFT)
  metadata      Json
}
